{"ast":null,"code":"var _jsxFileName = \"/Users/tatiane/Desktop/Bootcamp-Front-End/modulo5-desafio-final/super-heros-instagram/frontend/src/components/MoviePost/MoviePost.js\";\nimport React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport PostComment from '../PostComment/PostComment';\nimport Likes from '../Likes/Likes';\nimport CurrentUserComment from '../CurrentUserComment/CurrentUserComment';\nexport default function MoviePost(props) {\n  const likes = props.likes.filter(like => like.postId === props.post.id);\n  const comments = props.comments.filter(comment => comment.postId === props.post.id);\n\n  function handleOnChangeTextArea(event) {\n    setCurrentComment(event.target.value);\n  }\n\n  async function handleAdd() {\n    if (!currentComment.trim()) return;\n    const comment = {\n      id: uuidv4(),\n      value: currentComment\n    }; // adicionar o post no backend\n\n    const response = await fetch(`http://localhost:3001/comments${comment.postId}`, {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(comment)\n    }); // adicionar o post no frontend\n\n    if (response.ok) {\n      const newValue = comments.concat(comment);\n      setComments(newValue);\n      setCurrentComment('');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: props.post.picture,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CurrentUserComment, {\n    timelineUser: props.user,\n    comment: props.post.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Likes, {\n    likes: likes,\n    comments: comments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, comments.map((comment, index) => /*#__PURE__*/React.createElement(PostComment, {\n    key: index,\n    comment: comment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    value: props.currentComment,\n    onChange: props.onChangeTextArea,\n    cols: \"30\",\n    rows: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, \"Add a comment\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: props.addComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, \"Send\"))));\n}","map":{"version":3,"sources":["/Users/tatiane/Desktop/Bootcamp-Front-End/modulo5-desafio-final/super-heros-instagram/frontend/src/components/MoviePost/MoviePost.js"],"names":["React","v4","uuidv4","PostComment","Likes","CurrentUserComment","MoviePost","props","likes","filter","like","postId","post","id","comments","comment","handleOnChangeTextArea","event","setCurrentComment","target","value","handleAdd","currentComment","trim","response","fetch","method","headers","body","JSON","stringify","ok","newValue","concat","setComments","picture","user","title","map","index","onChangeTextArea","addComment"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport PostComment from '../PostComment/PostComment';\nimport Likes from '../Likes/Likes';\nimport CurrentUserComment from '../CurrentUserComment/CurrentUserComment';\n\nexport default function MoviePost(props) {\n  const likes = props.likes.filter((like) => like.postId === props.post.id);\n  const comments = props.comments.filter(\n    (comment) => comment.postId === props.post.id\n  );\n\n  function handleOnChangeTextArea(event) {\n    setCurrentComment(event.target.value);\n  }\n\n  async function handleAdd() {\n    if (!currentComment.trim()) return;\n\n    const comment = { id: uuidv4(), value: currentComment };\n\n    // adicionar o post no backend\n    const response = await fetch(\n      `http://localhost:3001/comments${comment.postId}`,\n      {\n        method: 'post',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(comment),\n      }\n    );\n\n    // adicionar o post no frontend\n    if (response.ok) {\n      const newValue = comments.concat(comment);\n      setComments(newValue);\n      setCurrentComment('');\n    }\n  }\n\n  return (\n    <div>\n      <div>\n        {/* eslint-disable-next-line */}\n        <img src={props.post.picture} />\n      </div>\n\n      <div>\n        <div>\n          <CurrentUserComment\n            timelineUser={props.user}\n            comment={props.post.title}\n          />\n        </div>\n\n        <div>\n          <Likes likes={likes} comments={comments} />\n        </div>\n\n        <div>\n          {comments.map((comment, index) => (\n            <PostComment key={index} comment={comment} />\n          ))}\n        </div>\n\n        <div>\n          <textarea\n            value={props.currentComment}\n            onChange={props.onChangeTextArea}\n            cols=\"30\"\n            rows=\"10\"\n          >\n            Add a comment\n          </textarea>\n          <button onClick={props.addComment}>Send</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}