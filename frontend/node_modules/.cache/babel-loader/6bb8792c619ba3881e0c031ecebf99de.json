{"ast":null,"code":"var _jsxFileName = \"/Users/tatiane/Desktop/Bootcamp-Front-End/modulo5-desafio-final/super-heros-instagram/frontend/src/components/Herosgram/Herosgram.js\";\nimport React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport css from './herosgram.module.css';\nimport Header from '../Header/Header';\nimport CurrentUserInfo from '../CurrentUserInfo/CurrentUserInfo';\nimport ChangeUser from '../ChangeUser/ChangeUser';\nimport Timeline from '../Timeline/Timeline';\nexport default function Herosgram() {\n  const timelineUser = 'superman';\n  const [activeUser, setActiveUser] = useState('superman');\n  const [currentComment, setCurrentComment] = useState('');\n  const [posts, setPosts] = useState([]);\n  const [comments, setComments] = useState([]);\n  const [likes, setLikes] = useState([]);\n  const [bestFriends, setBestFriends] = useState([timelineUser]);\n  useEffect(() => {\n    const getPosts = async () => {\n      const res = await fetch(`http://localhost:3001/posts?user=${timelineUser}&_limit=2`);\n      const json = await res.json();\n      setPosts(json);\n    };\n\n    getPosts();\n  }, []);\n  useEffect(() => {\n    const getComments = async () => {\n      const res = await fetch('http://localhost:3001/comments');\n      const json = await res.json();\n      setComments(json);\n    };\n\n    getComments();\n  }, []);\n  useEffect(() => {\n    const getLikes = async () => {\n      const res = await fetch('http://localhost:3001/likes');\n      const json = await res.json();\n      setLikes(json);\n    };\n\n    getLikes();\n  }, []);\n  useEffect(() => {\n    const getBestFriends = async () => {\n      const res = await fetch('http://localhost:3001/bestFriends');\n      const json = await res.json();\n      setBestFriends(current => [...current, ...json]);\n    };\n\n    getBestFriends();\n  }, []);\n\n  function handleOnChangeUser(clickedUser) {\n    setActiveUser(clickedUser);\n  }\n\n  function handleOnChangeTextArea(event) {\n    setCurrentComment(event.target.value);\n  }\n\n  async function handleAdd() {\n    if (!currentComment.trim()) return;\n    const comment = {\n      id: uuidv4(),\n      value: currentComment\n    }; // adicionar o post no backend\n\n    const response = await fetch('http://localhost:3001/comments', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(comment)\n    }); // adicionar o post no frontend\n\n    if (response.ok) {\n      const newValue = comments.concat(comment);\n      setComments(newValue);\n      setCurrentComment('');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: css.flexbox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CurrentUserInfo, {\n    user: timelineUser,\n    posts: posts,\n    likes: likes,\n    comments: comments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ChangeUser, {\n    activeUser: activeUser,\n    bestFriends: bestFriends,\n    onClick: handleOnChangeUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Timeline, {\n    activeUser: activeUser,\n    posts: posts,\n    likes: likes,\n    comments: comments,\n    timelineUser: timelineUser,\n    currentComment: currentComment,\n    onChangeTextArea: handleOnChangeTextArea,\n    onClickAddComment: handleAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/tatiane/Desktop/Bootcamp-Front-End/modulo5-desafio-final/super-heros-instagram/frontend/src/components/Herosgram/Herosgram.js"],"names":["React","useState","useEffect","v4","uuidv4","css","Header","CurrentUserInfo","ChangeUser","Timeline","Herosgram","timelineUser","activeUser","setActiveUser","currentComment","setCurrentComment","posts","setPosts","comments","setComments","likes","setLikes","bestFriends","setBestFriends","getPosts","res","fetch","json","getComments","getLikes","getBestFriends","current","handleOnChangeUser","clickedUser","handleOnChangeTextArea","event","target","value","handleAdd","trim","comment","id","response","method","headers","body","JSON","stringify","ok","newValue","concat","flexbox"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport css from './herosgram.module.css';\n\nimport Header from '../Header/Header';\nimport CurrentUserInfo from '../CurrentUserInfo/CurrentUserInfo';\nimport ChangeUser from '../ChangeUser/ChangeUser';\nimport Timeline from '../Timeline/Timeline';\n\nexport default function Herosgram() {\n  const timelineUser = 'superman';\n  const [activeUser, setActiveUser] = useState('superman');\n  const [currentComment, setCurrentComment] = useState('');\n\n  const [posts, setPosts] = useState([]);\n  const [comments, setComments] = useState([]);\n  const [likes, setLikes] = useState([]);\n  const [bestFriends, setBestFriends] = useState([timelineUser]);\n\n  useEffect(() => {\n    const getPosts = async () => {\n      const res = await fetch(\n        `http://localhost:3001/posts?user=${timelineUser}&_limit=2`\n      );\n      const json = await res.json();\n\n      setPosts(json);\n    };\n\n    getPosts();\n  }, []);\n\n  useEffect(() => {\n    const getComments = async () => {\n      const res = await fetch('http://localhost:3001/comments');\n      const json = await res.json();\n\n      setComments(json);\n    };\n\n    getComments();\n  }, []);\n\n  useEffect(() => {\n    const getLikes = async () => {\n      const res = await fetch('http://localhost:3001/likes');\n      const json = await res.json();\n\n      setLikes(json);\n    };\n\n    getLikes();\n  }, []);\n\n  useEffect(() => {\n    const getBestFriends = async () => {\n      const res = await fetch('http://localhost:3001/bestFriends');\n      const json = await res.json();\n\n      setBestFriends((current) => [...current, ...json]);\n    };\n\n    getBestFriends();\n  }, []);\n\n  function handleOnChangeUser(clickedUser) {\n    setActiveUser(clickedUser);\n  }\n\n  function handleOnChangeTextArea(event) {\n    setCurrentComment(event.target.value);\n  }\n\n  async function handleAdd() {\n    if (!currentComment.trim()) return;\n\n    const comment = { id: uuidv4(), value: currentComment };\n\n    // adicionar o post no backend\n    const response = await fetch('http://localhost:3001/comments', {\n      method: 'post',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(comment),\n    });\n\n    // adicionar o post no frontend\n    if (response.ok) {\n      const newValue = comments.concat(comment);\n      setComments(newValue);\n      setCurrentComment('');\n    }\n  }\n\n  return (\n    <div>\n      <Header />\n\n      <div className={css.flexbox}>\n        <div>\n          <CurrentUserInfo\n            user={timelineUser}\n            posts={posts}\n            likes={likes}\n            comments={comments}\n          />\n        </div>\n\n        <div>\n          <ChangeUser\n            activeUser={activeUser}\n            bestFriends={bestFriends}\n            onClick={handleOnChangeUser}\n          />\n        </div>\n      </div>\n\n      <Timeline\n        activeUser={activeUser}\n        posts={posts}\n        likes={likes}\n        comments={comments}\n        timelineUser={timelineUser}\n        currentComment={currentComment}\n        onChangeTextArea={handleOnChangeTextArea}\n        onClickAddComment={handleAdd}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}