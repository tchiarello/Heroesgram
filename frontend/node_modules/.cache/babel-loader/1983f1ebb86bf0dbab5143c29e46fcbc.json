{"ast":null,"code":"var _jsxFileName = \"/Users/tatiane/Desktop/Bootcamp-Front-End/modulo5-desafio-final/super-heros-instagram/frontend/src/components/Herosgram/Herosgram.js\";\nimport React, { useState, useEffect } from 'react';\nimport css from './herosgram.module.css';\nimport Header from '../Header/Header';\nimport CurrentUserInfo from '../CurrentUserInfo/CurrentUserInfo';\nimport ChangeUser from '../ChangeUser/ChangeUser';\nimport Timeline from '../Timeline/Timeline';\nexport default function Herosgram() {\n  const timelineUser = 'superman';\n  const [activeUser, setActiveUser] = useState('superman');\n  const [posts, setPosts] = useState([]);\n  const [isLoadingPosts, setIsLoadingPosts] = useState(true);\n  const [comments, setComments] = useState([]);\n  const [isLoadingComments, setIsLoadingComments] = useState(true);\n  const [likes, setLikes] = useState([]);\n  const [bestFriends, setBestFriends] = useState([timelineUser]);\n  const isLoadingAll = isLoadingPosts || isLoadingComments;\n  useEffect(() => {\n    const getPosts = async () => {\n      setIsLoadingPosts(true);\n      setTimeout(async () => {\n        const res = await fetch(`http://localhost:3001/posts?user=${timelineUser}&_limit=2`);\n        const json = await res.json();\n        setPosts(json);\n        setIsLoadingPosts(false);\n      }, 2000);\n    };\n\n    getPosts();\n  }, []);\n  useEffect(() => {\n    const getComments = async () => {\n      const res = await fetch('http://localhost:3001/comments');\n      const json = await res.json();\n      setComments(json);\n    };\n\n    getComments();\n  }, []);\n  useEffect(() => {\n    const getLikes = async () => {\n      const res = await fetch('http://localhost:3001/likes');\n      const json = await res.json();\n      setLikes(json);\n    };\n\n    getLikes();\n  }, []);\n  useEffect(() => {\n    const getBestFriends = async () => {\n      const res = await fetch('http://localhost:3001/bestFriends');\n      const json = await res.json();\n      setBestFriends(current => [...current, ...json]);\n    };\n\n    getBestFriends();\n  }, []);\n\n  function handleOnChangeUser(clickedUser) {\n    setActiveUser(clickedUser);\n  }\n\n  function onNewComment(newComment) {\n    setComments(current => [...current, newComment]);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: css.padding,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: css.grid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CurrentUserInfo, {\n    user: timelineUser,\n    posts: posts,\n    likes: likes,\n    comments: comments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ChangeUser, {\n    activeUser: activeUser,\n    bestFriends: bestFriends,\n    onClick: handleOnChangeUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Timeline, {\n    activeUser: activeUser,\n    posts: posts,\n    likes: likes,\n    comments: comments,\n    timelineUser: timelineUser,\n    onNewComment: onNewComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/tatiane/Desktop/Bootcamp-Front-End/modulo5-desafio-final/super-heros-instagram/frontend/src/components/Herosgram/Herosgram.js"],"names":["React","useState","useEffect","css","Header","CurrentUserInfo","ChangeUser","Timeline","Herosgram","timelineUser","activeUser","setActiveUser","posts","setPosts","isLoadingPosts","setIsLoadingPosts","comments","setComments","isLoadingComments","setIsLoadingComments","likes","setLikes","bestFriends","setBestFriends","isLoadingAll","getPosts","setTimeout","res","fetch","json","getComments","getLikes","getBestFriends","current","handleOnChangeUser","clickedUser","onNewComment","newComment","padding","grid"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport css from './herosgram.module.css';\n\nimport Header from '../Header/Header';\nimport CurrentUserInfo from '../CurrentUserInfo/CurrentUserInfo';\nimport ChangeUser from '../ChangeUser/ChangeUser';\nimport Timeline from '../Timeline/Timeline';\n\nexport default function Herosgram() {\n  const timelineUser = 'superman';\n  const [activeUser, setActiveUser] = useState('superman');\n\n  const [posts, setPosts] = useState([]);\n  const [isLoadingPosts, setIsLoadingPosts] = useState(true);\n  const [comments, setComments] = useState([]);\n  const [isLoadingComments, setIsLoadingComments] = useState(true);\n  const [likes, setLikes] = useState([]);\n  const [bestFriends, setBestFriends] = useState([timelineUser]);\n\n  const isLoadingAll = isLoadingPosts || isLoadingComments;\n\n  useEffect(() => {\n    const getPosts = async () => {\n      setIsLoadingPosts(true);\n\n      setTimeout(async () => {\n        const res = await fetch(\n          `http://localhost:3001/posts?user=${timelineUser}&_limit=2`\n        );\n        const json = await res.json();\n\n        setPosts(json);\n        setIsLoadingPosts(false);\n      }, 2000);\n    };\n\n    getPosts();\n  }, []);\n\n  useEffect(() => {\n    const getComments = async () => {\n      const res = await fetch('http://localhost:3001/comments');\n      const json = await res.json();\n\n      setComments(json);\n    };\n\n    getComments();\n  }, []);\n\n  useEffect(() => {\n    const getLikes = async () => {\n      const res = await fetch('http://localhost:3001/likes');\n      const json = await res.json();\n\n      setLikes(json);\n    };\n\n    getLikes();\n  }, []);\n\n  useEffect(() => {\n    const getBestFriends = async () => {\n      const res = await fetch('http://localhost:3001/bestFriends');\n      const json = await res.json();\n\n      setBestFriends((current) => [...current, ...json]);\n    };\n\n    getBestFriends();\n  }, []);\n\n  function handleOnChangeUser(clickedUser) {\n    setActiveUser(clickedUser);\n  }\n\n  function onNewComment(newComment) {\n    setComments((current) => [...current, newComment]);\n  }\n\n  return (\n    <div className={css.padding}>\n      <Header />\n\n      <div className={css.grid}>\n        <div>\n          <CurrentUserInfo\n            user={timelineUser}\n            posts={posts}\n            likes={likes}\n            comments={comments}\n          />\n        </div>\n\n        <div>\n          <ChangeUser\n            activeUser={activeUser}\n            bestFriends={bestFriends}\n            onClick={handleOnChangeUser}\n          />\n        </div>\n      </div>\n\n      <Timeline\n        activeUser={activeUser}\n        posts={posts}\n        likes={likes}\n        comments={comments}\n        timelineUser={timelineUser}\n        onNewComment={onNewComment}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}