{"ast":null,"code":"var _jsxFileName = \"/Users/tatiane/Desktop/Bootcamp-Front-End/modulo5-desafio-final/super-heros-instagram/frontend/src/components/MoviePost/MoviePost.js\";\nimport React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport css from './moviePost.module.css';\nimport PostComment from '../PostComment/PostComment';\nimport Likes from '../Likes/Likes';\nimport CurrentUserComment from '../CurrentUserComment/CurrentUserComment';\nexport default function MoviePost(props) {\n  const [currentComment, setCurrentComment] = useState('');\n  const [clickedLike, seClickedLike] = useState([]);\n  const likes = props.likes.filter(like => like.postId === props.post.id);\n  const comments = props.comments.filter(comment => comment.postId === props.post.id);\n\n  function handleOnChangeTextArea(event) {\n    setCurrentComment(event.target.value);\n  }\n\n  async function handleAdd() {\n    if (!currentComment.trim()) return;\n    const comment = {\n      id: uuidv4(),\n      comment: currentComment,\n      user: props.activeUser,\n      postId: props.post.id\n    }; // adicionar o post no backend\n\n    const response = await fetch(`http://localhost:3001/comments`, {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(comment)\n    }); // adicionar o post no frontend\n\n    if (response.ok) {\n      props.onNewComment(comment);\n      setCurrentComment('');\n    }\n  }\n\n  async function handleLikes() {\n    const like = {\n      id: uuidv4(),\n      postId: props.post.id,\n      user: props.activeUser\n    }; // adicionar o post no backend\n\n    const response = await fetch(`http://localhost:3001/likes`, {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(comment)\n    }); // adicionar o post no frontend\n\n    if (response.ok) {\n      props.onNewLike(like);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: css.grid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: props.post.picture,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: css.postContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CurrentUserComment, {\n    user: props.timelineUser,\n    comment: props.post.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Likes, {\n    likes: likes,\n    comments: comments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: css.commentsContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, comments.map((comment, index) => /*#__PURE__*/React.createElement(PostComment, {\n    key: index,\n    comment: comment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: css.addComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    value: currentComment,\n    placeholder: \"Add a comment\",\n    onChange: handleOnChangeTextArea,\n    cols: \"30\",\n    rows: \"10\",\n    className: css.textarea,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, \"Add a comment\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleAdd,\n    className: css.btn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, \"Send\")))));\n}","map":{"version":3,"sources":["/Users/tatiane/Desktop/Bootcamp-Front-End/modulo5-desafio-final/super-heros-instagram/frontend/src/components/MoviePost/MoviePost.js"],"names":["React","useState","v4","uuidv4","css","PostComment","Likes","CurrentUserComment","MoviePost","props","currentComment","setCurrentComment","clickedLike","seClickedLike","likes","filter","like","postId","post","id","comments","comment","handleOnChangeTextArea","event","target","value","handleAdd","trim","user","activeUser","response","fetch","method","headers","body","JSON","stringify","ok","onNewComment","handleLikes","onNewLike","grid","picture","postContainer","timelineUser","title","commentsContainer","map","index","addComment","textarea","btn"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport css from './moviePost.module.css';\n\nimport PostComment from '../PostComment/PostComment';\nimport Likes from '../Likes/Likes';\nimport CurrentUserComment from '../CurrentUserComment/CurrentUserComment';\n\nexport default function MoviePost(props) {\n  const [currentComment, setCurrentComment] = useState('');\n  const [clickedLike, seClickedLike] = useState([]);\n\n  const likes = props.likes.filter((like) => like.postId === props.post.id);\n  const comments = props.comments.filter(\n    (comment) => comment.postId === props.post.id\n  );\n\n  function handleOnChangeTextArea(event) {\n    setCurrentComment(event.target.value);\n  }\n\n  async function handleAdd() {\n    if (!currentComment.trim()) return;\n\n    const comment = {\n      id: uuidv4(),\n      comment: currentComment,\n      user: props.activeUser,\n      postId: props.post.id,\n    };\n\n    // adicionar o post no backend\n    const response = await fetch(`http://localhost:3001/comments`, {\n      method: 'post',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(comment),\n    });\n\n    // adicionar o post no frontend\n    if (response.ok) {\n      props.onNewComment(comment);\n      setCurrentComment('');\n    }\n  }\n\n  async function handleLikes() {\n    const like = {\n      id: uuidv4(),\n      postId: props.post.id,\n      user: props.activeUser,\n    };\n\n    // adicionar o post no backend\n    const response = await fetch(`http://localhost:3001/likes`, {\n      method: 'post',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(comment),\n    });\n\n    // adicionar o post no frontend\n    if (response.ok) {\n      props.onNewLike(like);\n    }\n  }\n\n  return (\n    <div className={css.grid}>\n      <div>\n        {/* eslint-disable-next-line */}\n        <img src={props.post.picture} />\n      </div>\n\n      <div className={css.postContainer}>\n        <div>\n          <CurrentUserComment\n            user={props.timelineUser}\n            comment={props.post.title}\n          />\n        </div>\n\n        <div>\n          <Likes likes={likes} comments={comments} />\n        </div>\n\n        <div className={css.commentsContainer}>\n          {comments.map((comment, index) => (\n            <PostComment key={index} comment={comment} />\n          ))}\n        </div>\n\n        <div className={css.addComment}>\n          <textarea\n            value={currentComment}\n            placeholder=\"Add a comment\"\n            onChange={handleOnChangeTextArea}\n            cols=\"30\"\n            rows=\"10\"\n            className={css.textarea}\n          >\n            Add a comment\n          </textarea>\n          <div>\n            <button onClick={handleAdd} className={css.btn}>\n              Send\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}